import createE from './components/create-element';
import setKeyboard from './components/set-keyboard';
import { specialIvent, shiftOff } from './components/special-event';
import corretHandle from './components/corret-handle';
import setLanguage from './components/set-lang';

const KEYBOARD = createE('div', 'root');
const TEXTAREA = createE('textarea', 'input');

let currentPosition = 0;

TEXTAREA.placeholder = '–ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞: \n –î–ª—è —Å–º–µ–Ω—ã —Ä–∞—Å–∫–ª–∞–¥–∫–∏ leftCTRL + leftAlt';

document.body.appendChild(KEYBOARD);
document.body.appendChild(TEXTAREA);

setKeyboard(KEYBOARD);

document.body.addEventListener('mousedown', (event) => {
  const currentCode = event.target.dataset.code;
  if (!currentCode) return;

  const button = document.querySelector(`.button[data-code="${currentCode}"]`);
  button.classList.add('active');

  specialIvent(currentCode, KEYBOARD, TEXTAREA, currentPosition);

  corretHandle(TEXTAREA, currentCode, button);
});

document.body.addEventListener('mouseup', (event) => {
  TEXTAREA.focus();
  const currentCode = event.target.dataset.code;
  if (!currentCode) return;

  TEXTAREA.focus();
  if (currentCode === 'ShiftRight' || currentCode === 'ShiftLeft') {
    shiftOff(KEYBOARD, TEXTAREA);
  }
  const button = document.querySelector(
    `.button[data-code="${event.target.dataset.code}"]`
  );
  button.classList.remove('active');
});

document.addEventListener('keydown', (event) => {
  const currentCode = event.code;

  document.activeElement.blur();
  TEXTAREA.focus();
  event.preventDefault();
  specialIvent(currentCode, KEYBOARD, TEXTAREA, currentPosition);

  const button = document.querySelector(`.button[data-code="${event.code}"]`);
  button.classList.add('active');

  corretHandle(TEXTAREA, currentCode, button);
});

document.addEventListener('keyup', (event) => {
  const currentCode = event.code;

  const button = document.querySelector(`.button[data-code="${currentCode}"]`);
  button.classList.remove('active');

  if (currentCode === 'ShiftRight' || currentCode === 'ShiftLeft') {
    shiftOff(KEYBOARD);
  }

  setLanguage(event, KEYBOARD);
});

// eslint-disable-next-line no-alert
alert('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!üôÉ\n –°–∞–º–æ–æ—Ü–µ–Ω–∫–∞ –∏ –¥—Ä—É–≥–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏. ü§î');

const str = '–°–∞–º–æ–æ—Ü–µ–Ω–∫–∞ 110/110 –í—Å–µ –ø—É–Ω–∫—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã, —è–∑—ã–∫ —Å–º–µ–Ω—è–µ–º—ã–π, –∞–Ω–∏–º–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç, –∫–ª–∞–≤–∏—à–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç —Å–≤–æ–∏ —Ñ—É–Ω–∫—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ü–µ–Ω–∏–≤–∞–π—Ç–µ —Ä–∞–±–æ—Ç—É –∞–Ω–æ–Ω–∏–º–Ω–æ, –≤—Å—è–∫–æ–µ –±—ã–≤–∞–µ—Ç –∏ —É–≤—Å–µ—Ö –º–æ–∂–µ—Ç –∑–∞–ø—Ä—è—Ç–∞—Ç—å—Å—è –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞ –∏–ª–∏ –Ω–µ–¥–æ–ø–æ–Ω—è—Ç–∞—è –¥–µ—Ç–∞–ª—å. –í—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–ø—Ä–∞–≤–∏—Ç—å —Ç–æ –≤ —á–µ–º –æ—à–∏–±—Å—è –∏–ª–∏ –æ–±—Å—É–¥–∏—Ç—å –æ–±–º–µ–Ω–∏–≤–∞—è—Å—å –æ–ø—ã—Ç–æ–º. –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –≤—Ä–µ–º—è!';
const style = [
  'padding: 8px;',
  'background: black;',
  'color: #33ff33;',
  'font-family: monospace;',
  'font-size: 12px;',
  'text-shadow: 0 0 10px #33ff33, 0 0 30px #33ff33, 0 0 40px #33ff33, 0 0 50px #33ff33, 0 0 75px #33ff33;'
].join('');

// eslint-disable-next-line no-console
console.log('%c%s', style, str);
